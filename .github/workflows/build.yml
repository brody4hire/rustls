name: rustls

permissions:
  contents: read

on:
  push:
  pull_request:
  merge_group:
  schedule:
    - cron: '0 18 * * *'

jobs:

  coverage:
    name: Measure coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools

      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov

      - name: Measure coverage
        run: ./admin/coverage --lcov --output-path final.info

      - name: Report to codecov.io
        uses: codecov/codecov-action@v4
        with:
          file: final.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  minver:
    name: Check minimum versions of direct dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@nightly

      - name: Install cargo-minimal-versions
        uses: taiki-e/install-action@cargo-minimal-versions

      # cargo-minimal-versions requires cargo-hack
      - name: Install cargo-hack
        uses: taiki-e/install-action@cargo-hack

      - name: Check direct-minimal-versions
        run: cargo minimal-versions --direct --ignore-private check
        working-directory: rustls/

  cross-build-test:
    name: cross build-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          #Â XXX XXX
          - i586-unknown-linux-gnu
          # XXX XXX TBD XXX XXX
          # - thumbv6m-none-eabi
          # - mips-unknown-linux-gnu
          # - mipsel-unknown-linux-gnu
          - riscv64gc-unknown-linux-gnu
          # 32-bit Android targets:
          - thumbv7neon-linux-androideabi
          # - armv5te-unknown-linux-gnueabi
          # - arm-linux-androideabi
          # - armv7-linux-androideabi
          # - i686-linux-android
          # # standard 32-bit (Linux) target - SKIP bindgen for this target:
          # - i686-unknown-linux-gnu
          # # exotic target(s):
          # - s390x-unknown-linux-gnu
          # # additional target(s):
          # # NOTE: This could have some overlap with 64-bit ARM-style CPU on macOS CI host;
          # # may have similar ARM-style CPU overlap with standard Windows & possibly Linux in the future
          # - aarch64-linux-android
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install rust toolchain - nightly
        uses: dtolnay/rust-toolchain@nightly
      - run: rustup component add rust-src
      - name: Install cross (cross-rs) from GitHub
        run: cargo install cross --git https://github.com/cross-rs/cross
      - run: cargo remove -p rustls-examples tokio hickory-resolver
      - run: cargo remove -p rustls-connect-tests --dev hickory-resolver
      - run: rm -rf Cargo.lock
      - name: Install bindgen feature & CLI for aws-lc-sys (as needed for many cross targets)
        if: ${{ matrix.target != 'i686-unknown-linux-gnu' }}
        run: cargo add --dev --features bindgen aws-lc-sys --package rustls --verbose && cargo install bindgen-cli --verbose
      - run: cargo bench --all-features
        env:
          RUSTFLAGS: --cfg=bench
      - run: cross test --package rustls --target ${{ matrix.target }} -Z build-std="core,alloc,std"

  semver:
    name: Check semver compatibility
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Check semver
        uses: obi1kenobi/cargo-semver-checks-action@v2

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Check formatting
        run: cargo fmt --all -- --check
      - name: Check formatting (connect-tests workspace)
        run: cargo fmt --all --manifest-path=connect-tests/Cargo.toml -- --check
      - name: Check formatting (fuzz workspace)
        run: cargo fmt --all --manifest-path=fuzz/Cargo.toml -- --check
