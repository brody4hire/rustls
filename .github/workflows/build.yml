name: rustls

permissions:
  contents: read

on:
  push:
  pull_request:
  merge_group:
  schedule:
    - cron: '0 18 * * *'

jobs:
  # XXX TODO REPLACE THIS HACKED-UP PR 2088 JOB WITH WORKING BUILD / TEST UPDATES WITH NEW FEATURE OPTIONS
  pr-2088-specific-build-testing:
    name: ABC Build & test for PR 2088 - want CI to test this first for PR 2088
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
        os:
          - ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install ${{ matrix.rust }} toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: cargo build (debug; defaultproviderenabled feature enabled)
        run: cargo build --locked -F defaultproviderenabled

      - name: cargo test (debug; defaultproviderenabled feature enabled)
        run: cargo test --features defaultproviderenabled
        env:
          RUST_BACKTRACE: 1

      - name: cargo build (debug; rustls package with no feature options specified)
        run: cargo build --locked -p rustls

      - name: cargo test (debug; rustls package with no feature options specified)
        run: cargo test -p rustls

      - name: cargo build (debug; rustls package with the withrcalias feature enabled)
        run: cargo build --locked -p rustls -F withrcalias

      - name: cargo test (debug; rustls package with the withrcalias feature enabled)
        run: cargo test -p rustls -F withrcalias

  # XXX FIX & RESTORE:
  # build:
  #   name: Build+test
  #   runs-on: ${{ matrix.os }}
  #   ...

  # XXX FIX & RESTORE:
  # msrv:
  #   name: MSRV
  #   ...

  bogo:
    name: BoGo test suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install golang toolchain
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
          cache: false

      - name: Run test suite (ring)
        working-directory: bogo
        run: ./runme
        env:
          BOGO_SHIM_PROVIDER: ring

      - name: Run test suite (aws-lc-rs)
        working-directory: bogo
        run: ./runme
        env:
          BOGO_SHIM_PROVIDER: aws-lc-rs

      - name: Run test suite (aws-lc-rs-fips)
        working-directory: bogo
        run: ./runme
        env:
          BOGO_SHIM_PROVIDER: aws-lc-rs-fips

  # XXX FIX & RESTORE:
  # fuzz:
  #   ...

  # XXX FIX & RESTORE:
  # benchmarks:
  #   ...

  # XXX FIX & RESTORE:
  # docs:
  #   ...

  # XXX FIX & RESTORE:
  # coverage:
  #   ...


  minver:
    name: Check minimum versions of direct dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@nightly

      - name: Install cargo-minimal-versions
        uses: taiki-e/install-action@cargo-minimal-versions

      # cargo-minimal-versions requires cargo-hack
      - name: Install cargo-hack
        uses: taiki-e/install-action@cargo-hack

      - name: Check direct-minimal-versions
        run: cargo minimal-versions --direct --ignore-private check
        working-directory: rustls/

  cross:
    name: Check cross compilation targets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install cross
        uses: taiki-e/install-action@cross
      - run: cross build -p rustls --locked --target i686-unknown-linux-gnu

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Check formatting
        run: cargo fmt --all -- --check
      - name: Check formatting (connect-tests workspace)
        run: cargo fmt --all --manifest-path=connect-tests/Cargo.toml -- --check
      - name: Check formatting (fuzz workspace)
        run: cargo fmt --all --manifest-path=fuzz/Cargo.toml -- --check

  format-unstable:
    name: Format (unstable)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install rust nightly toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          components: rustfmt
          toolchain: nightly-2024-02-21
      - name: Check formatting (unstable)
        run: cargo fmt --all -- --check --config-path .rustfmt.unstable.toml
        continue-on-error: true
      - name: Check formatting (unstable, connect-tests workspace)
        run: cargo fmt --all --manifest-path=connect-tests/Cargo.toml -- --check --config-path .rustfmt.unstable.toml
        continue-on-error: true
      - name: Check formatting (unstable, fuzz workspace)
        run: cargo fmt --all --manifest-path=fuzz/Cargo.toml -- --check --config-path .rustfmt.unstable.toml
        continue-on-error: true

  # XXX FIX & RESTORE:
  # clippy:
  #   ...
  #
  # clippy-nightly:
  #   ...

  check-external-types:
    name: Validate external types appearing in public API
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2024-05-01
          # ^ sync with https://github.com/awslabs/cargo-check-external-types/blob/main/rust-toolchain.toml
      - run: cargo install --locked cargo-check-external-types
      - name: run cargo-check-external-types for rustls/
        working-directory: rustls/
        run: cargo check-external-types

  openssl-tests:
    name: Run openssl-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: openssl version
        run: openssl version

      - name: cargo test (in openssl-tests/)
        working-directory: openssl-tests/
        run: cargo test --locked -- --include-ignored
        env:
          RUST_BACKTRACE: 1
